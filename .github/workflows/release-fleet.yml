# Fleet release workflow
name: Fleet release

on:
  push:
    tags:
      - v**
  pull_request:
    # TODO remove this (added to ensure the workflow runs once when submitting a test PR, so that it can be triggered
    # afterwards)

permissions:
  contents: write
  packages: write

env:
  GOARCH: amd64
  CGO_ENABLED: 0
  SETUP_K3D_VERSION: 'v5.5.1'

jobs:
  build-fleet:
    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        platforms:
#          - linux-amd64
#          - linux-arm64
#          - windows-1809
#          - windows-2022
#        test_type:
#          - acceptance
#          - e2e-secrets
#          - e2e-nosecrets
            # TODO need: 
 
    # linux-amd64: build job:
    #   * step: build (dapper ci), w/ Windows cross-build
    #     * keep running Dapper, at least for now?
    #   * step: fossa checks (analyze + test) (existing GH action?)
    #   * step: github release (existing GH action?)
    #   * step: push tags to releases.rancher.com
    #   * step: push latest tag to releases.rancher.com
    #   * step: push Docker image for agent
    #   * step: push Docker image for gitjob
    #   * step: push Docker image for controller
    # linux-arm64:
    #   * step: build (dapper build)
    #   * step: publish Docker agent image
    #   * step: publish Docker gitjob image
    #   * step: publish Docker controller image
    # windows-1809: publish agent image
    #   # depends on linux-amd64 for build
    # windows-2022: publish agent image
    #   # depends on linux-amd64 for build
    # end: manifest job, depending on all build jobs
    steps:
      - name: Check out Fleet
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

#      - name: Run FOSSA scan
#        uses: fossas/fossa-action@v1.3.1
#        with:
#          api-key: ${{ secrets.FOSSA_API_KEY }}
#
#      - name: Run FOSSA tests
#        uses: fossas/fossa-action@v1.3.1
#        with:
#          api-key: ${{ secrets.FOSSA_API_KEY }}
#          run-tests: true

      - name: Log into Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: v1.24.0
          args: release --clean --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload charts to release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./scripts/package-helm
          tag=${GITHUB_REF#refs/tags/}
          for f in $(find dist/artifacts/ -name '*.tgz'); do
            gh release upload $tag $f
          done
